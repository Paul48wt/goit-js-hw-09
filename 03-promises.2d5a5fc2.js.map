{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAIpCJ,EAAQ,CACNH,WACAC,UAKFG,EAAO,CACLJ,WACAC,S,GAGHA,E,IAjDMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE3BF,EAAQG,OAAOH,EAAMI,OACrB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOD,EAAOE,OAAQC,GAAK,EAC9CtB,EAAcsB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,QAAQC,IAAI,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,OAC1D0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCH,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGjD6B,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,QAAQC,IAAI,sBAAuCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,OACzD0B,EAAA9B,GAAS+B,OAAOG,QACd,sBAAqCL,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAIjDe,GAASG,OAAOF,EAAKG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst promiseArray = [];\nform.addEventListener('submit', onFormInput);\n\nfunction onFormInput(event) {\n  event.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  delay = Number(delay.value);\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  // console.log(position, delay);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        // Reject\n\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","Number","value","i","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.2d5a5fc2.js.map"}